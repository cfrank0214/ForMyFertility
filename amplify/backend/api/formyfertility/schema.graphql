schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Femalefertility {
  age: Int!
  amountChildren: Int!
  amountYearsChildlessSex: Int!
  amountperfecthealth: Int!
  currentIVF: String!
  donoreggs: String!
  donorembryos: String!
  donorsperm: String!
  eggs: Int!
  embryos: Int!
  embryosfinalcycle: Int!
  embryostransfered: Int!
  frozenembryos: String!
  gender: String!
  gestationalcarrier: String!
  gynecologicalCauses: String!
  hadEctopicPregnancy: String!
  hadPregnancy: String!
  hormone: String!
  icsi: String!
  id: ID!
  ivfconceived: String!
  ivfcycles: Int!
  liveBirth: String!
  miscarriages: String!
  morethanoneivfconceived: String!
  partner: String!
  singletonmulitbirth: String!
  username: String!
  whichGynecologicalCauses: String!
  whichPartnerIssue: String!
  yearChildlessSex: String!
}

type FemalefertilityConnection {
  items: [Femalefertility]
  nextToken: String
}

type Malefertility {
  abnormalities: String!
  age: Int!
  alcohol: String!
  cigarettes: String!
  drinks: String!
  enhancers: String!
  exercise: String!
  exercisetype: String!
  frequency: String!
  gender: String!
  height: String!
  id: ID!
  jobactivity: String!
  jobexposure: String!
  lube: String!
  marijuana: String!
  medconditions: String!
  pregnant: String!
  sauna: String!
  sleep: String!
  soy: String!
  stressed: String!
  superfoods: String!
  trying: String!
  tv: String!
  username: String!
  veg: String!
  weight: Int!
}

type MalefertilityConnection {
  items: [Malefertility]
  nextToken: String
}

type Mutation {
  createFemalefertility(input: CreateFemalefertilityInput!): Femalefertility
  createMalefertility(input: CreateMalefertilityInput!): Malefertility
  deleteFemalefertility(input: DeleteFemalefertilityInput!): Femalefertility
  deleteMalefertility(input: DeleteMalefertilityInput!): Malefertility
  updateFemalefertility(input: UpdateFemalefertilityInput!): Femalefertility
  updateMalefertility(input: UpdateMalefertilityInput!): Malefertility
}

type Query {
  allFemalefertilityByUsername(count: Int, nextToken: String, username: String!): FemalefertilityConnection
  allMalefertilityByUsername(count: Int, nextToken: String, username: String!): MalefertilityConnection
  getFemalefertility(id: String!): Femalefertility
  getMalefertility(id: String!): Malefertility
  listFemalefertilities(filter: TableFemalefertilityFilterInput, limit: Int, nextToken: String): FemalefertilityConnection
  listMalefertilities(filter: TableMalefertilityFilterInput, limit: Int, nextToken: String): MalefertilityConnection
}

type Subscription {
  onCreateFemalefertility(id: ID): Femalefertility @aws_subscribe(mutations : ["createFemalefertility"])
  onCreateMalefertility(id: ID): Malefertility @aws_subscribe(mutations : ["createMalefertility"])
  onDeleteFemalefertility(id: ID): Femalefertility @aws_subscribe(mutations : ["deleteFemalefertility"])
  onDeleteMalefertility(id: ID): Malefertility @aws_subscribe(mutations : ["deleteMalefertility"])
  onUpdateFemalefertility(id: ID): Femalefertility @aws_subscribe(mutations : ["updateFemalefertility"])
  onUpdateMalefertility(id: ID): Malefertility @aws_subscribe(mutations : ["updateMalefertility"])
}

input CreateFemalefertilityInput {
  age: Int!
  amountChildren: Int!
  amountYearsChildlessSex: Int!
  amountperfecthealth: Int!
  currentIVF: String!
  donoreggs: String!
  donorembryos: String!
  donorsperm: String!
  eggs: Int!
  embryos: Int!
  embryosfinalcycle: Int!
  embryostransfered: Int!
  frozenembryos: String!
  gender: String!
  gestationalcarrier: String!
  gynecologicalCauses: String!
  hadEctopicPregnancy: String!
  hadPregnancy: String!
  hormone: String!
  icsi: String!
  ivfconceived: String!
  ivfcycles: Int!
  liveBirth: String!
  miscarriages: String!
  morethanoneivfconceived: String!
  partner: String!
  singletonmulitbirth: String!
  username: String!
  whichGynecologicalCauses: String!
  whichPartnerIssue: String!
  yearChildlessSex: String!
}

input CreateMalefertilityInput {
  abnormalities: String!
  age: Int!
  alcohol: String!
  cigarettes: String!
  drinks: String!
  enhancers: String!
  exercise: String!
  exercisetype: String!
  frequency: String!
  gender: String!
  height: String!
  jobactivity: String!
  jobexposure: String!
  lube: String!
  marijuana: String!
  medconditions: String!
  pregnant: String!
  sauna: String!
  sleep: String!
  soy: String!
  stressed: String!
  superfoods: String!
  trying: String!
  tv: String!
  username: String!
  veg: String!
  weight: Int!
}

input DeleteFemalefertilityInput {
  id: ID!
}

input DeleteMalefertilityInput {
  id: ID!
}

input TableBooleanFilterInput {
  eq: Boolean
  ne: Boolean
}

input TableFemalefertilityFilterInput {
  age: TableIntFilterInput
  amountChildren: TableIntFilterInput
  amountYearsChildlessSex: TableIntFilterInput
  amountperfecthealth: TableIntFilterInput
  currentIVF: TableStringFilterInput
  donoreggs: TableStringFilterInput
  donorembryos: TableStringFilterInput
  donorsperm: TableStringFilterInput
  eggs: TableIntFilterInput
  embryos: TableIntFilterInput
  embryosfinalcycle: TableIntFilterInput
  embryostransfered: TableIntFilterInput
  frozenembryos: TableStringFilterInput
  gender: TableStringFilterInput
  gestationalcarrier: TableStringFilterInput
  gynecologicalCauses: TableStringFilterInput
  hadEctopicPregnancy: TableStringFilterInput
  hadPregnancy: TableStringFilterInput
  hormone: TableStringFilterInput
  icsi: TableStringFilterInput
  id: TableIDFilterInput
  ivfconceived: TableStringFilterInput
  ivfcycles: TableIntFilterInput
  liveBirth: TableStringFilterInput
  miscarriages: TableStringFilterInput
  morethanoneivfconceived: TableStringFilterInput
  partner: TableStringFilterInput
  singletonmulitbirth: TableStringFilterInput
  username: TableStringFilterInput
  whichGynecologicalCauses: TableStringFilterInput
  whichPartnerIssue: TableStringFilterInput
  yearChildlessSex: TableStringFilterInput
}

input TableFloatFilterInput {
  between: [Float]
  contains: Float
  eq: Float
  ge: Float
  gt: Float
  le: Float
  lt: Float
  ne: Float
  notContains: Float
}

input TableIDFilterInput {
  beginsWith: ID
  between: [ID]
  contains: ID
  eq: ID
  ge: ID
  gt: ID
  le: ID
  lt: ID
  ne: ID
  notContains: ID
}

input TableIntFilterInput {
  between: [Int]
  contains: Int
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
  notContains: Int
}

input TableMalefertilityFilterInput {
  abnormalities: TableStringFilterInput
  age: TableIntFilterInput
  alcohol: TableStringFilterInput
  cigarettes: TableStringFilterInput
  drinks: TableStringFilterInput
  enhancers: TableStringFilterInput
  exercise: TableStringFilterInput
  exercisetype: TableStringFilterInput
  frequency: TableStringFilterInput
  gender: TableStringFilterInput
  height: TableStringFilterInput
  id: TableIDFilterInput
  jobactivity: TableStringFilterInput
  jobexposure: TableStringFilterInput
  lube: TableStringFilterInput
  marijuana: TableStringFilterInput
  medconditions: TableStringFilterInput
  pregnant: TableStringFilterInput
  sauna: TableStringFilterInput
  sleep: TableStringFilterInput
  soy: TableStringFilterInput
  stressed: TableStringFilterInput
  superfoods: TableStringFilterInput
  trying: TableStringFilterInput
  tv: TableStringFilterInput
  username: TableStringFilterInput
  veg: TableStringFilterInput
  weight: TableStringFilterInput
}

input TableStringFilterInput {
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
  ne: String
  notContains: String
}

input UpdateFemalefertilityInput {
  age: Int!
  amountChildren: Int!
  amountYearsChildlessSex: Int!
  amountperfecthealth: Int!
  currentIVF: String!
  donoreggs: String!
  donorembryos: String!
  donorsperm: String!
  eggs: Int!
  embryos: Int!
  embryosfinalcycle: Int!
  embryostransfered: Int!
  frozenembryos: String!
  gender: String!
  gestationalcarrier: String!
  gynecologicalCauses: String!
  hadEctopicPregnancy: String!
  hadPregnancy: String!
  hormone: String!
  icsi: String!
  id: ID!
  ivfconceived: String!
  ivfcycles: Int!
  liveBirth: String!
  miscarriages: String!
  morethanoneivfconceived: String!
  partner: String!
  singletonmulitbirth: String!
  username: String!
  whichGynecologicalCauses: String!
  whichPartnerIssue: String!
  yearChildlessSex: String!
}

input UpdateMalefertilityInput {
  abnormalities: String!
  age: Int!
  alcohol: String!
  cigarettes: String!
  drinks: String!
  enhancers: String!
  exercise: String!
  exercisetype: String!
  frequency: String!
  gender: String!
  height: String!
  id: ID!
  jobactivity: String!
  jobexposure: String!
  lube: String!
  marijuana: String!
  medconditions: String!
  pregnant: String!
  sauna: String!
  sleep: String!
  soy: String!
  stressed: String!
  superfoods: String!
  trying: String!
  tv: String!
  username: String!
  veg: String!
  weight: Int!
}